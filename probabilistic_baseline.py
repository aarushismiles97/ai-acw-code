# -*- coding: utf-8 -*-
"""Probabilistic Baseline.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A_ic3Sq69jsOnPWUvSY-0uT1oUyvSUcu
"""

from google.colab import drive

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
import numpy as np

drive.mount('/content/gdrive')

import pandas as pd

traindata = pd.read_csv('gdrive/My Drive/deforestation_sentiment_train.csv', usecols=["text","distillbert_valence"], na_values = ['no info', '.'])
testdata = pd.read_csv('gdrive/My Drive/deforestation_sentiment_val.csv', usecols=["text","distillbert_valence"], na_values = ['no info', '.'])

import re

def process_sentence(sentence):
  return re.sub(r'[\\\\#/@()/!:*«`\'?¿";!<>,.|]', '', sentence.lower().strip())

def convert_decimals(decimals):
  converted_decimals = []
  for decimal in decimals:
    if decimal < 0:
      converted_decimals.append(0)
    else:
      converted_decimals.append(1)
  return converted_decimals

decimals = traindata["distillbert_valence"]
converted_decimals_train = convert_decimals(decimals)

decimals = testdata["distillbert_valence"]
converted_decimals_test = convert_decimals(decimals)

X_train = traindata["text"].apply(process_sentence)
Y_train = converted_decimals_train

X_test = testdata["text"].apply(process_sentence)
Y_test = converted_decimals_test

vectorizer = CountVectorizer()
train_features = vectorizer.fit_transform(X_train)
test_features = vectorizer.transform(X_test)

classifier = MultinomialNB()
classifier.fit(train_features, Y_train)

predicted_labels = classifier.predict(test_features)

accuracy = accuracy_score(Y_test, predicted_labels)
print("Accuracy:", accuracy*100)